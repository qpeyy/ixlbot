javascript:(async()=>{if(window.termui)return alert("termui already loaded");window.termui={api:"https://raw.githubusercontent.com/qpeyy/ixlbot/refs/heads/main/"};const frame=document.createElement("iframe");frame.src="/dv3/"+Math.random().toString(36).slice(2),frame.style.display="none",frame.id="termuiContext",document.body.appendChild(frame),await new Promise(resolve=>{const timeout=setTimeout(resolve,3000);frame.onload=()=>{clearTimeout(timeout);resolve()}});window.termui.context=frame.contentWindow,window.termui.fetch=window.termui.context?.fetch?.bind(window.termui.context)||window.fetch.bind(window);(function(){'use strict';console.clear();const GITHUB_FILE_URL="https://raw.githubusercontent.com/qpeyy/api/main/apis";const model="gemini-2.5-flash";let API_KEY=null;let autoModeActive=false;let questionCounter=0;let apiChange=0;let apiKeysCache=[];let isProcessing=false;let lastKnownText="";let logTimeout=null;let keyErrorCount={};function log(msg){console.log(`[Gemini Helper] ${msg}`);const oldBox=document.getElementById("__gemini_log");if(oldBox)oldBox.remove();const box=document.createElement("div");box.id="__gemini_log";Object.assign(box.style,{position:"fixed",bottom:"10px",right:"10px",background:"#fff",border:"1px solid #ccc",padding:"8px 12px",borderRadius:"8px",boxShadow:"0 2px 8px rgba(0,0,0,0.15)",fontFamily:"monospace",fontSize:"12px",maxWidth:"600px",zIndex:999999,whiteSpace:"pre-wrap",transition:"opacity 0.3s ease"});box.textContent=msg;document.body.appendChild(box);clearTimeout(logTimeout);logTimeout=setTimeout(()=>{if(box){box.style.opacity="0";setTimeout(()=>box.remove(),300)}},2000)}function getQuestionText(){const el=document.querySelector(".question-component");if(!el){log("🔴 Question element not found.");return null}let output="";function walk(node){if(node.nodeType===Node.TEXT_NODE){const t=node.textContent.trim();if(t&&t!=="="&&t.toLowerCase()!=="submit"&&!/^\s*(Created with Snap|#|\.|;)/i.test(t)){output+=t+" "}}else if(node.nodeType===Node.ELEMENT_NODE){const cls=node.classList?.value||"";if(cls.includes("practice-audio-button has-inner-translation-button")){return}if(cls.includes("old-superscript-in-expression")){const exponent=node.innerText.trim();output=output.trimEnd();output+="^"+exponent+" "}else{node.childNodes.forEach(walk)}}}walk(el);return output.trim()}function getTargetElementText(){let targetEl=document.getElementById("yui_3_18_1_1_1761275887189_552");if(!targetEl){targetEl=document.querySelector(".question-component")}return targetEl?targetEl.innerText.trim():""}async function waitForTextChange(previousText,maxWaitTime=30000){log("⏳ Waiting for page content to change...");const startTime=Date.now();return new Promise((resolve)=>{const checkInterval=setInterval(()=>{const currentText=getTargetElementText();const elapsed=Date.now()-startTime;if(currentText!==previousText&&currentText.length>0){clearInterval(checkInterval);log("✅ Content changed! Proceeding...");resolve(true)}else if(elapsed>maxWaitTime){clearInterval(checkInterval);log("⚠️ Timeout waiting for content change.");resolve(false)}},100)})}async function fetchKeyFromGitHub(forceRefresh=false){if(apiKeysCache.length===0||forceRefresh){const frame=document.createElement("iframe");frame.style.display="none";frame.src="/dv3/"+Math.random().toString(36).slice(2);document.body.appendChild(frame);await new Promise(r=>{const timeout=setTimeout(r,3000);frame.onload=()=>{clearTimeout(timeout);r()}});const mretContext=frame.contentWindow;const fetchFunc=mretContext?.fetch?.bind(mretContext)||window.termui.fetch;log("📦 Fetching API keys from GitHub...");try{const res=await fetchFunc(GITHUB_FILE_URL+"?"+Date.now());if(!res.ok)throw new Error(`HTTP ${res.status}`);const text=await res.text();apiKeysCache=text.split("\n").map(l=>l.trim()).filter(l=>l.length>0);if(!apiKeysCache.length)throw new Error("No keys found")}catch(err){log(`❌ Key fetch failed: ${err.message}`);return null}finally{frame.remove()}}if(!API_KEY||apiChange>=3){API_KEY=apiKeysCache[Math.floor(Math.random()*apiKeysCache.length)];apiChange=0;log("🔁 Changed to a new API key.")}const visibleKey=API_KEY.length>10?`${API_KEY.slice(0,5)}...${API_KEY.slice(-5)}`:API_KEY;log(`🔑 Using API key: ${visibleKey}`);return API_KEY}async function getAnswerFromGemini(question,apiKey){const prompt=`Answer directly and concisely. ONLY the final answer: ${question}`;try{log("🚀 Sending to Gemini...");const res=await window.termui.fetch(`https://generativelanguage.googleapis.com/v1beta/models/${model}:generateContent?key=${apiKey}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:[{parts:[{text:prompt}]}],generationConfig:{temperature:0,maxOutputTokens:8192}})});if(!res.ok){const errText=await res.text();if(res.status===429||errText.includes("RESOURCE_EXHAUSTED")||errText.includes("quota")){keyErrorCount[apiKey]=(keyErrorCount[apiKey]||0)+1;if(keyErrorCount[apiKey]>=5){log(`🗑️ Removing bad key after 5 failures: ${apiKey.slice(0,5)}...${apiKey.slice(-5)}`);apiKeysCache=apiKeysCache.filter(k=>k!==apiKey);delete keyErrorCount[apiKey];if(apiKeysCache.length===0){log("❌ All keys exhausted. Fetching fresh keys...");await fetchKeyFromGitHub(true)}}throw new Error("Try again, this is something on our end")}throw new Error(`HTTP ${res.status}: ${errText}`)}keyErrorCount[apiKey]=0;const data=await res.json();let answer=data?.candidates?.[0]?.content?.parts?.[0]?.text||"";answer=answer.trim().replace(/^\$(.*?)\$/,"$1").trim();log(`✅ Gemini answer received: ${answer}`);return answer}catch(err){log(`❌ Gemini error: ${err.message}`);return null}}function isValidResponse(answer){if(!answer||typeof answer!=='string')return false;const t=answer.trim().toLowerCase();return t.length>0&&!["no text","error","quota","blocked","limit","unknown","submit","answer"].some(p=>t.includes(p))}async function fillAnswer(answer){if(!isValidResponse(answer)){log("❌ Cannot fill invalid answer.");return false}const input=document.querySelector("input[type='text'], input[type='number']");if(input){input.value=answer;["input","change"].forEach(evt=>input.dispatchEvent(new Event(evt,{bubbles:true})));log(`✅ Filled input with: ${answer}`)}else{log("🟡 No input found.")}lastKnownText=getTargetElementText();const container=document.querySelector(".yui3-widget-ft.fade-in");if(container){const children=Array.from(container.children);if(children.length){children.forEach(child=>{child.click();log(`🖱️ Clicked: ${child.tagName}${child.id?`#${child.id}`:""}`)});return true}else{log("🟡 No clickable children found in container.")}}else{log("🟡 Container not found: .yui3-widget-ft.fade-in")}return false}async function processQuestion(){if(isProcessing){log("⏸️ Already processing, skipping...");return}isProcessing=true;try{apiChange++;const question=getQuestionText();if(!question)return;log(`📄 QUESTION FOUND:\n${question}`);API_KEY=await fetchKeyFromGitHub();if(!API_KEY)return;const answer=await getAnswerFromGemini(question,API_KEY);if(!answer)return;log(`💡 FINAL ANSWER: ${answer}`);const submitted=await fillAnswer(answer);if(autoModeActive&&submitted){const changed=await waitForTextChange(lastKnownText);if(changed){await new Promise(r=>setTimeout(r,1500));log("🔄 Processing next question...");isProcessing=false;processQuestion();return}}}finally{if(!autoModeActive)isProcessing=false}}window.processQuestion=processQuestion;window.addEventListener("keydown",(e)=>{const key=e.key.toLowerCase();if(key==="c"||key==="y"){e.preventDefault();e.stopPropagation()}if(key==="c"&&!e.ctrlKey&&!e.altKey&&!e.metaKey){log("⌨️ 'C' pressed — fetching new key and answering...");processQuestion()}if(key==="y"&&!e.ctrlKey&&!e.altKey&&!e.metaKey){autoModeActive=!autoModeActive;if(autoModeActive){log("🤖 Auto mode: ON. Will process next question.");const status=document.createElement("div");status.id="__auto_status";status.style.cssText="position:fixed;top:10px;left:10px;background:green;color:white;padding:4px 8px;border-radius:5px;z-index:99999;";status.textContent="AUTO: ON";document.body.appendChild(status);setTimeout(()=>{isProcessing=false;processQuestion()},500)}else{log("🤖 Auto mode: OFF");isProcessing=false;const status=document.getElementById("__auto_status");if(status)status.remove()}}},true);function createMainGUI(deviceType){const existingGUI=document.getElementById("uiverseGui");if(existingGUI)existingGUI.remove();const styleEl=document.createElement("style");styleEl.textContent=`#uiverseGui{position:fixed;padding:1em;background:#f0f0f0;border-radius:0.8em;box-shadow:4px 4px 12px #c5c5c5,-4px -4px 12px #ffffff;z-index:9999;display:flex;flex-direction:column;align-items:center;gap:15px;user-select:none}#uiverseGui .header{width:100%;height:5px;display:flex;justify-content:flex-end;align-items:center;cursor:move;margin-bottom:0;user-select:none}#uiverseGui .closeBtn{cursor:pointer;font-weight:bold;font-size:12px;line-height:12px;background:transparent;border:none;padding:0;margin:0}#uiverseGui .title{font-size:18px;font-weight:bold;margin-bottom:10px;user-select:none}#uiverseGui button.uiverseBtn{color:#090909;padding:0.5em 1.5em;font-size:16px;border-radius:0.5em;background:#e8e8e8;cursor:pointer;border:1px solid #e8e8e8;transition:all 0.3s;box-shadow:6px 6px 12px #c5c5c5,-6px -6px 12px #ffffff;display:block;user-select:none}#uiverseGui button.uiverseBtn:hover{border:1px solid white}#uiverseGui button.uiverseBtn:active{box-shadow:4px 4px 12px #c5c5c5,-4px -4px 12px #ffffff}.device-label,.auto-label{font-size:16px;font-weight:bold;margin-bottom:5px;user-select:none}.checkbox-apple{position:relative;width:50px;height:25px;margin:0;user-select:none}.checkbox-apple label{position:absolute;top:0;left:0;width:50px;height:25px;border-radius:50px;background:linear-gradient(to bottom,#b3b3b3,#e6e6e6);cursor:pointer;transition:all 0.3s ease;user-select:none}.checkbox-apple label:after{content:'';position:absolute;top:1px;left:1px;width:23px;height:23px;border-radius:50%;background-color:#fff;box-shadow:0 1px 3px rgba(0,0,0,0.3);transition:all 0.3s ease;user-select:none}.checkbox-apple input[type="checkbox"]:checked + label{background:linear-gradient(to bottom,#4cd964,#5de24e)}.checkbox-apple input[type="checkbox"]:checked + label:after{transform:translateX(25px)}.checkbox-apple label:hover{background:linear-gradient(to bottom,#b3b3b3,#e6e6e6)}.checkbox-apple label:hover:after{box-shadow:0 1px 3px rgba(0,0,0,0.3)}`;document.head.appendChild(styleEl);const gui=document.createElement("div");gui.id="uiverseGui";const header=document.createElement("div");header.className="header";const closeBtn=document.createElement("button");closeBtn.textContent="×";closeBtn.className="closeBtn";closeBtn.onclick=()=>gui.remove();header.appendChild(closeBtn);gui.appendChild(header);const title=document.createElement("div");title.className="title";title.textContent="Term Client";gui.appendChild(title);if(deviceType==="Mobile"){const autoLabel=document.createElement("div");autoLabel.className="auto-label";autoLabel.textContent="Auto Mode";gui.appendChild(autoLabel);const checkboxWrapper=document.createElement("div");checkboxWrapper.className="checkbox-apple";const checkbox=document.createElement("input");checkbox.type="checkbox";checkbox.id="appleCheckbox";checkbox.style.width="0";checkbox.style.height="0";checkbox.style.opacity="0";checkbox.style.position="absolute";checkbox.style.pointerEvents="none";const label=document.createElement("label");label.htmlFor="appleCheckbox";checkboxWrapper.appendChild(checkbox);checkboxWrapper.appendChild(label);gui.appendChild(checkboxWrapper);checkbox.addEventListener("change",function(){if(this.checked){console.log("🔗 Checkbox ON - Creating Ison bridge...");let ison=document.getElementById("Ison");if(!ison){ison=document.createElement("iframe");ison.id="Ison";ison.style.display="none";ison.dataset.Mobile="true";ison.dataset.timestamp=Date.now();document.body.appendChild(ison);console.log("✅ Ison bridge created by GUI")}}else{console.log("🔗 Checkbox OFF - Removing Ison bridge...");const ison=document.getElementById("Ison");if(ison){ison.remove();console.log("✅ Ison bridge removed by GUI")}}});setInterval(()=>{const ison=document.getElementById("Ison");const shouldBeChecked=ison&&ison.dataset.autoMode==="true";if(checkbox.checked!==shouldBeChecked){checkbox.checked=shouldBeChecked}},10);const onceBtn=document.createElement("button");onceBtn.textContent="Once";onceBtn.className="uiverseBtn";onceBtn.onclick=()=>{console.log("🖱️ Computer button clicked - processing question once...");if(typeof window.processQuestion==="function"){window.processQuestion()}else{alert("Gemini Helper script not loaded!")}};gui.appendChild(onceBtn);const buttons=[onceBtn];let maxWidth=0;buttons.forEach(btn=>maxWidth=Math.max(maxWidth,btn.offsetWidth));buttons.forEach(btn=>btn.style.minWidth=maxWidth+"px")}else{const deviceLabel=document.createElement("div");deviceLabel.className="device-label";deviceLabel.textContent="Choose your device";gui.appendChild(deviceLabel);const devices=["Mobile","Computer"];const buttons=[];devices.forEach(device=>{const btn=document.createElement("button");btn.textContent=device;btn.className="uiverseBtn";btn.onclick=()=>{if(device==="Mobile"){createMainGUI("Mobile")}else{alert("Computer clicked!")}};gui.appendChild(btn);buttons.push(btn)});let maxWidth=0;buttons.forEach(btn=>maxWidth=Math.max(maxWidth,btn.offsetWidth));buttons.forEach(btn=>btn.style.minWidth=maxWidth-5+"px")}document.body.appendChild(gui);const rect=gui.getBoundingClientRect();gui.style.left=(window.innerWidth-rect.width)/2+"px";gui.style.top=(window.innerHeight-rect.height)/2+"px";let isDragging=false,offsetX=0,offsetY=0;gui.addEventListener("mousedown",e=>{if(!e.target.closest("button")&&!e.target.closest("input")&&!e.target.closest("label")){isDragging=true;const rect=gui.getBoundingClientRect();offsetX=e.clientX-rect.left;offsetY=e.clientY-rect.top;e.preventDefault()}});document.addEventListener("mousemove",e=>{if(isDragging){gui.style.left=e.clientX-offsetX+"px";gui.style.top=e.clientY-offsetY+"px"}});document.addEventListener("mouseup",()=>{isDragging=false})}createMainGUI();log("✅ Helper ready. Press 'C' to get answer. Press 'Y' to toggle auto mode.")})()})();
